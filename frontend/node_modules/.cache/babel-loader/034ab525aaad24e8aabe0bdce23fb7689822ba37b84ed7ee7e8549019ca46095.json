{"ast":null,"code":"var _jsxFileName = \"/Users/jameshare/codingProjects/sop-ai/sop-ai/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport sopData from './sops.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiKey, setApiKey] = useState(localStorage.getItem('gemini_api_key') || '');\n  const [isKeySet, setIsKeySet] = useState(!!localStorage.getItem('gemini_api_key'));\n  const messagesEndRef = useRef(null);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isKeySet) {\n      setMessages([{\n        text: \"Hello! I'm THE SOP AI. How can I help you today with store procedures?\",\n        sender: 'ai'\n      }]);\n    }\n  }, [isKeySet]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Save API key to localStorage\n  const handleSaveApiKey = () => {\n    localStorage.setItem('gemini_api_key', apiKey);\n    setIsKeySet(true);\n  };\n\n  // Generate context from SOP data\n  const createContext = () => {\n    let context = \"You are THE SOP AI, an expert assistant trained on the company's Standard Operating Procedures. \";\n    context += \"When answering questions, base your responses on the following SOP information:\\n\\n\";\n    sopData.forEach(sop => {\n      context += `CATEGORY: ${sop.category}\\n`;\n      context += `TITLE: ${sop.title}\\n`;\n      context += `CONTENT: ${sop.content}\\n\\n`;\n    });\n    return context;\n  };\n\n  // Send message to Gemini API\n  const sendToGemini = async userQuestion => {\n    try {\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=\" + apiKey, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: createContext() + `Question: ${userQuestion}\\nAnswer:`\n            }]\n          }]\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error.message || \"Error with Gemini API\");\n      }\n      return data.candidates[0].content.parts[0].text;\n    } catch (error) {\n      console.error('Error with Gemini API:', error);\n      return \"Sorry, I encountered an error while processing your request. Please check your API key and try again.\";\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    // Get AI response\n    const aiResponse = await sendToGemini(input);\n    const aiMessage = {\n      text: aiResponse,\n      sender: 'ai'\n    };\n    setMessages(prev => [...prev, aiMessage]);\n    setIsLoading(false);\n  };\n\n  // API key setup screen\n  if (!isKeySet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-key-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"THE SOP AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your Gemini API key to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          placeholder: \"Your Gemini API Key\",\n          className: \"api-key-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveApiKey,\n          disabled: !apiKey.trim(),\n          className: \"save-key-btn\",\n          children: \"Save & Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"api-key-help\",\n          children: [\"You can get a Gemini API key from the\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://ai.google.dev/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Google AI Studio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main chat interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"THE SOP AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your retail assistant for Standard Operating Procedures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-area\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai loading\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask about store procedures...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xk1N7uu/B2p8gnWK33Fa1HgrPhQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sopData","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","apiKey","setApiKey","localStorage","getItem","isKeySet","setIsKeySet","messagesEndRef","text","sender","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSaveApiKey","setItem","createContext","context","forEach","sop","category","title","content","sendToGemini","userQuestion","response","fetch","method","headers","body","JSON","stringify","contents","parts","data","json","error","Error","message","candidates","console","handleSubmit","e","preventDefault","trim","userMessage","prev","aiResponse","aiMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","disabled","href","rel","map","index","ref","onSubmit","_c","$RefreshReg$"],"sources":["/Users/jameshare/codingProjects/sop-ai/sop-ai/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport sopData from './sops.json';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiKey, setApiKey] = useState(localStorage.getItem('gemini_api_key') || '');\n  const [isKeySet, setIsKeySet] = useState(!!localStorage.getItem('gemini_api_key'));\n  const messagesEndRef = useRef(null);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isKeySet) {\n      setMessages([{\n        text: \"Hello! I'm THE SOP AI. How can I help you today with store procedures?\",\n        sender: 'ai'\n      }]);\n    }\n  }, [isKeySet]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Save API key to localStorage\n  const handleSaveApiKey = () => {\n    localStorage.setItem('gemini_api_key', apiKey);\n    setIsKeySet(true);\n  };\n\n  // Generate context from SOP data\n  const createContext = () => {\n    let context = \"You are THE SOP AI, an expert assistant trained on the company's Standard Operating Procedures. \";\n    context += \"When answering questions, base your responses on the following SOP information:\\n\\n\";\n    \n    sopData.forEach(sop => {\n      context += `CATEGORY: ${sop.category}\\n`;\n      context += `TITLE: ${sop.title}\\n`;\n      context += `CONTENT: ${sop.content}\\n\\n`;\n    });\n    \n    return context;\n  };\n\n  // Send message to Gemini API\n  const sendToGemini = async (userQuestion) => {\n    try {\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=\" + apiKey, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          contents: [\n            {\n              parts: [\n                {\n                  text: createContext() + `Question: ${userQuestion}\\nAnswer:`\n                }\n              ]\n            }\n          ]\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (data.error) {\n        throw new Error(data.error.message || \"Error with Gemini API\");\n      }\n      \n      return data.candidates[0].content.parts[0].text;\n    } catch (error) {\n      console.error('Error with Gemini API:', error);\n      return \"Sorry, I encountered an error while processing your request. Please check your API key and try again.\";\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    \n    // Add user message\n    const userMessage = { text: input, sender: 'user' };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    // Get AI response\n    const aiResponse = await sendToGemini(input);\n    const aiMessage = { text: aiResponse, sender: 'ai' };\n    setMessages(prev => [...prev, aiMessage]);\n    setIsLoading(false);\n  };\n\n  // API key setup screen\n  if (!isKeySet) {\n    return (\n      <div className=\"app\">\n        <div className=\"api-key-container\">\n          <h1>THE SOP AI</h1>\n          <p>Enter your Gemini API key to get started</p>\n          <input\n            type=\"password\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            placeholder=\"Your Gemini API Key\"\n            className=\"api-key-input\"\n          />\n          <button \n            onClick={handleSaveApiKey}\n            disabled={!apiKey.trim()}\n            className=\"save-key-btn\"\n          >\n            Save & Continue\n          </button>\n          <p className=\"api-key-help\">\n            You can get a Gemini API key from the \n            <a href=\"https://ai.google.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Google AI Studio\n            </a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Main chat interface\n  return (\n    <div className=\"app\">\n      <div className=\"chat-container\">\n        <header className=\"chat-header\">\n          <h1>THE SOP AI</h1>\n          <p>Your retail assistant for Standard Operating Procedures</p>\n        </header>\n        \n        <div className=\"messages-area\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </div>\n          ))}\n          {isLoading && (\n            <div className=\"message ai loading\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"input-form\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask about store procedures...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}